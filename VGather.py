#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import requests
from re import findall
from core.colors import info, good
from requests import get
from re import search


def pic():
    
    print('''
    {1} CSRF Scanning                      
    {2} Port Scan
    {3} HTTP Header Check
    {4} Page Links
    {5} whois
    {6} Censys report
    {7} Reverse IP
    {8} Robots.txt
    {9} Crack Hash
    {10} Subdomain Finder
    {11} Clodflare bypass and Info Gathering
    {12} CMS checker
    {13} Gather Email and Information
    {14} Website Crawling 
    {15} Vfind
''')


pic()


def check_status():
    print("\t [#] Checking API server...")
    request = requests.get("https://hackertarget.com")
    http = request.status_code
    if http == 200:
        print("\t [#] oww !! you lucky !! API Server is Online")
    else:
        print("\t [!] So sorry now the Server is offline")
        exit()


def quit():
    alpha = input("Wanna exit ?[yes/no] - ").lower()
    if alpha == "yes":
        exit()
    if alpha == "no":
        pic()
        option()
        
        



def option():
     
    try:
   
        selection = input("Search:- ")
        if selection == '1':
                victim = str(input("Enter the Domain address:- "))
                os.system(' cd modules/Bolt && pip3 install -r requirements.txt && python3 bolt.py -u'+victim)
                quit()
            
                
        elif selection == '2':
                var = input("Enter ip address:- ")
                check_status()
                result2 = requests.get(
                    "https://api.hackertarget.com/nmap/?q=" + var).content.decode("UTF-8")
                print(result2)
                quit()
            
                
        elif selection == '3':
               dig = str(input("Enter web address:- "))
               check_status()
               result = requests.get(
                "https://api.hackertarget.com/httpheaders/?q=" + dig).content.decode("UTF-8")
               print(result)
               quit()
            

        elif selection == '4':
              website = str(input("Enter web address:-"))
              website = website.replace("http://", "")
              website = website.replace("https://", "")
              website = ("https://" + website)
              check_status()
              result = requests.get("https://api.hackertarget.com/pagelinks/?q=" +
                                  website).content.decode("UTF-8")
              print(result)
              quit()
            
            

        elif selection == '5':
              victim = str(input("Enter IP address:- "))
              whois = 'https://api.hackertarget.com/whois/?q='+victim
              info = requests.get(whois)
              print('\033[91m',info.text)
              quit()
                  
        elif selection == '6':
               ip = str(input("Enter IP address:- "))
               dirty_response = get('https://censys.io/ipv4/%s/raw' % ip).text
               clean_response = dirty_response.replace('&#34;', '"')
               response = clean_response.split('<code class="json">')[1].split('</code>')[0]
               sys.stdout.write(response + '\n')
               quit()
               
      
               
               
        elif selection == '7':
              inp = str(input("Enter the Domain address:- "))
              lookup = 'https://api.hackertarget.com/reverseiplookup/?q=%s' % inp
              try:
                  result = get(lookup).text
                  sys.stdout.write(result)
              except:
                  sys.stdout.write('%s Invalid IP address' % bad)
              quit()   
                  
                  
        elif selection == '8':
              victim = str(input("Enter the Domain address:- "))
              robots ='http://'+victim+'/robots.txt'
              info = requests.get(robots)
              print('\033[91m',info.text)
              quit()
                  
        elif selection == '9':
      
              victim = input("Enter the HASH address:- ")
              os.system('cd modules/Hash-Buster && python hash.py -s'+victim)
              quit()
              
        elif selection == '10':
      
              victim = str(input("Enter the Domain address:- "))
              os.system('cd modules/Sublist3r && python sublist3r.py -d '+victim)
              quit()  
                 
        
        elif selection == '11':
              os.system(' cd modules/Striker && pip install -r requirements.txt && python striker.py ')
              quit()   
        
        elif selection == '12':
              os.system(' cd modules/CMSeeK && pip3 install -r requirements.txt && python3 cmseek.py ')
              quit()     
        
        elif selection == '13':
              victim = str(input("Enter the Domain address:- "))
              os.system(' cd modules/Infoga && python3 infoga.py -d '+victim)
              quit() 
              
        elif selection == '14':
              victim = str(input("Enter the Domain address:- "))
              os.system('cd modules/photon && python3 photon.py -u'+victim)
              quit()  
              
        elif selection == '15':
             os.system (' python3 fin.py -m ')
             quit()
              
        else:
            vip = str(input("Sorry!Invalid Selection. Do You Wish to Quit[yes/no] - ").lower())
            if vip == "yes":
                quit()
            if vip == "no":
                pic()
                option()
            else:
                exit()
                
    except UnboundLocalError:
        print('The information you entered is incorrect')
        print()
        option()
    except requests.exceptions.ConnectionError:
        print('Your Internet Offline')
        exit() 
        
option()              


