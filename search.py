#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import socket
import subprocess
import os
import time
import signal
import random
import string
import threading
import re
from urlparse import urlsplit



def url_maker(url):
	if not re.match(r'http(s?)\:', url):
		url = 'http://' + url
	pased = urlsplit(url)
	host = pased.netloc
	if host.startswith('www.'):
		host = host[4:]
	return host

def check_internet():
    os.system('ping -c1 github.com > s_net 2>&1')
    if "0% packet loss" in open('s_net').read():
        val = 1
    else:
        val = 0
    os.system('rm s_net > /dev/null 2>&1')
    return val


# Initializing the color module class
class bcolos:
    HEADER = '\033[95m'
    prCyan = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    BADFAIL = '\033[91m' 
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

    BG_ERR_TXT 	= '\033[41m' 
    BG_HEAD_TXT = '\033[100m'
    BG_ENDL_TXT = '\033[46m'
    BG_CRIT_TXT = '\033[45m'
    BG_HIGH_TXT = '\033[41m'
    BG_MED_TXT  = '\033[43m'
    BG_LOW_TXT  = '\033[44m'
    BG_INFO_TXT = '\033[42m'
    
    
    
def vul_remed_info(v1,v2):
	print bcolos.BOLD+"RESULT:-"+bcolos.ENDC
	print "\t"+" "+bcolos.WARNING+str(tool_resp[v1][0])+bcolos.ENDC
    
    

def helper():

        print "\t./Vsearch.py URL -> Scan the Website \n"
        print "\tCtrl+C: Skip \n"
        print "\tCtrl+Z: Quit \n"
        


# Cleas Line
def clear():
        sys.stdout.write("\033[F")
        sys.stdout.write("\033[K")


# Initiliazing the idle loader/spinner class
class Spinner:
    busy = False
    delay = 0.05

    @staticmethod
    def spinning_cusor():
        while 1:
            for cusor in '|/\\': yield cusor #←↑↓→
            
    def __init__(self, delay=None):
        self.spinner_generator = self.spinning_cusor()
        if delay and float(delay): self.delay = delay

    def spinner_task(self):
        try:
            while self.busy:
                
                print bcolos.BG_ERR_TXT+next(self.spinner_generator)+bcolos.ENDC,
                sys.stdout.flush()
                time.sleep(self.delay)
                sys.stdout.write('\b')
                sys.stdout.flush()
        except (KeyboardInterrupt, SystemExit):
            #clear()
            print "\n\t"+ bcolos.BG_ERR_TXT+"Quitting..." +bcolos.ENDC
            sys.exit(1)

    def start(self):
        self.busy = True
        threading.Thread(target=self.spinner_task).start()

    def stop(self):
        try:
            self.busy = False
            time.sleep(self.delay)
        except (KeyboardInterrupt, SystemExit):
            #clear()
            print "\n\t"+ bcolos.BG_ERR_TXT+"Quitting..." +bcolos.ENDC
            sys.exit(1)
# End ofloader/spinner class


spinner = Spinner()




tool_names = [
                ["host",1],
                ["wget",1],
                ["wget",1],
                ["wget",1],
                ["wget",1],
                ["uniscan",1],
                ["wafw00f",1],
                ["nmap",1],
                ["theharvester",1],
                ["dnsrecon",1],
                ["fierce",1],
                ["dnswalk",1],
                ["whois",1],
                ["nmap",1],
                ["nmap",1],
                ["sslyze",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["sslyze",1],
                ["sslyze",1],
                ["sslyze",1],
                ["sslyze",1],
                ["lbd",1],
                ["golismero",1],
                ["golismero",1],
                ["golismero",1],
                ["golismero",1],
                ["golismero",1],
                ["dirb",1],
                ["xsser",1],
                ["golismero",1],
                ["golismero",1],
                ["golismero",1],
                ["golismero",1],
                ["dnsenum",1],
                ["fierce",1],
                ["dmitry",1],
                ["dmitry",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["davtest",1],
                ["golismero",1],
                ["uniscan",1],
                ["uniscan",1],
                ["uniscan",1],
                ["uniscan",1],
                ["uniscan",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["nikto",1],
                ["dnsmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["nmap",1],
                ["wget",1],
                ["nmap",1],
                ["nmap",1],
                ["wapiti",1],
                ["nmap",1],
                ["whatweb",1]
            ]



tool_cmd   = [
                ["host ",""],
                ["wget -O temp_aspnet_config_err --tries=1 ","/%7C~.aspx"],
                ["wget -O temp_wp_check --tries=1 ","/wp-admin"],
                ["wget -O temp_drp_check --tries=1 ","/user"],
                ["wget -O temp_joom_check --tries=1 ","/administrator"],
                ["uniscan -e -u ",""],
                ["wafw00f ",""],
                ["nmap -F --open -Pn ",""],
                ["theharvester -l 50 -b google -d ",""],
                ["dnsrecon -d ",""],
                ["fierce -wordlist xxx -dns ",""],
                ["dnswalk -d ","."],
                ["whois ",""],
                ["nmap -p80 --script http-security-heades -Pn ",""],
                ["nmap -p80,443 --script http-slowloris --max-parallelism 500 -Pn ",""],
                ["sslyze --heartbleed ",""],
                ["nmap -p443 --script ssl-heartbleed -Pn ",""],
                ["nmap -p443 --script ssl-poodle -Pn ",""],
                ["nmap -p443 --script ssl-ccs-injection -Pn ",""],
                ["nmap -p443 --script ssl-enum-ciphes -Pn ",""],
                ["nmap -p443 --script ssl-dh-params -Pn ",""],
                ["sslyze --certinfo=basic ",""],
                ["sslyze --compression ",""],
                ["sslyze --reneg ",""],
                ["sslyze --resum ",""],
                ["lbd ",""],
                ["golismero -e dns_malware scan ",""],
                ["golismero -e heartbleed scan ",""],
                ["golismero -e brute_url_predictables scan ",""],
                ["golismero -e brute_directories scan ",""],
                ["golismero -e sqlmap scan ",""],
                ["dirb http://"," -fi"],
                ["xsser --all=http://",""],
                ["golismero -e sslscan scan ",""],
                ["golismero -e zone_transfer scan ",""],
                ["golismero -e nikto scan ",""],
                ["golismero -e brute_dns scan ",""],
                ["dnsenum ",""],
                ["fierce -dns ",""],
                ["dmitry -e ",""],
                ["dmitry -s ",""],
                ["nmap -p23 --open -Pn ",""],
                ["nmap -p21 --open -Pn ",""],
                ["nmap --script stuxnet-detect -p445 -Pn ",""],
                ["davtest -url http://",""],
                ["golismero -e fingerprint_web scan ",""],
                ["uniscan -w -u ",""],
                ["uniscan -q -u ",""],
                ["uniscan -r -u ",""],
                ["uniscan -s -u ",""],
                ["uniscan -d -u ",""],
                ["nikto -Plugins 'apache_expect_xss' -host ",""],
                ["nikto -Plugins 'subdomain' -host ",""],
                ["nikto -Plugins 'shellshock' -host ",""],
                ["nikto -Plugins 'cookies' -host ",""],
                ["nikto -Plugins 'put_del_test' -host ",""],
                ["nikto -Plugins 'heades' -host ",""],
                ["nikto -Plugins 'ms10-070' -host ",""],
                ["nikto -Plugins 'msgs' -host ",""],
                ["nikto -Plugins 'outdated' -host ",""],
                ["nikto -Plugins 'httpoptions' -host ",""],
                ["nikto -Plugins 'cgi' -host ",""],
                ["nikto -Plugins 'ssl' -host ",""],
                ["nikto -Plugins 'sitefiles' -host ",""],
                ["nikto -Plugins 'paths' -host ",""],
                ["dnsmap ",""],
                ["nmap -p1433 --open -Pn ",""],
                ["nmap -p3306 --open -Pn ",""],
                ["nmap -p1521 --open -Pn ",""],
                ["nmap -p3389 --open -sU -Pn ",""],
                ["nmap -p3389 --open -sT -Pn ",""],
                ["nmap -p1-65535 --open -Pn ",""],
                ["nmap -p1-65535 -sU --open -Pn ",""],
                ["nmap -p161 -sU --open -Pn ",""],
                ["wget -O temp_aspnet_elmah_axd --tries=1 ","/elmah.axd"],
                ["nmap -p445,137-139 --open -Pn ",""],
                ["nmap -p137,138 --open -Pn ",""],
                ["wapiti "," -f txt -o temp_wapiti"],
                ["nmap -p80 --script=http-iis-webdav-vuln -Pn ",""],
                ["whatweb "," -a 1"]
            ]



tool_resp   = [
                ["Does not have an IPv6 Address. It is good to have one.",1],
                ["ASP.Net is misconfigured to throw server stack erros on screen.",2],
                ["WordPress Installation Found. Check for vulnerabilities corresponds to that vesion.",3],
                ["Drupal Installation Found. Check for vulnerabilities corresponds to that vesion.",4],
                ["Joomla Installation Found. Check for vulnerabilities corresponds to that vesion.",5],
                ["robots.txt/sitemap.xml found. Check those files for any information.",6],
                ["No Web Application Firewall Detected",7],
                ["Some ports are open. Perform a full-scan manually.",8],
                ["Email Addresses Found.",9],
                ["Zone Transfer Successful using DNSRecon. Reconfigure DNS immediately.",10],
                ["Zone Transfer Successful using fierce. Reconfigure DNS immediately.",10],
                ["Zone Transfer Successful using dnswalk. Reconfigure DNS immediately.",10],
                ["Whois Information Publicly Available.",11],
                ["XSS Protection Filter is Disabled.",12],
                ["Vulnerable to Slowloris Denial of Service.",13],
                ["HEARTBLEED Vulnerability Found with SSLyze.",14],
                ["HEARTBLEED Vulnerability Found with Nmap.",14],
                ["POODLE Vulnerability Detected.",15],
                ["OpenSSL CCS Injection Detected.",16],
                ["FREAK Vulnerability Detected.",17],
                ["LOGJAM Vulnerability Detected.",18],
                ["Unsuccessful OCSP Response.",19],
                ["Server supports Deflate Compression.",20],
                ["Secure Renegotiation is unsupported.",21],
                ["Secure Resumption unsupported with (Sessions IDs/TLS Tickets).",22],
                ["No DNS/HTTP based Load Balances Found.",23],
                ["Domain is spoofed/hijacked.",24],
                ["HEARTBLEED Vulnerability Found with Golismero.",14],
                ["Open Files Found with Golismero BruteForce.",25],
                ["Open Directories Found with Golismero BruteForce.",26],
                ["DB Banner retrieved with SQLMap.",27],
                ["Open Directories Found with DirB.",26],
                ["XSSer found XSS vulnerabilities.",28],
                ["Found SSL related vulnerabilities with Golismero.",29],
                ["Zone Transfer Successful with Golismero. Reconfigure DNS immediately.",10],
                ["Golismero Nikto Plugin found vulnerabilities.",30],
                ["Found Subdomains with Golismero.",31],
                ["Zone Transfer Successful using DNSEnum. Reconfigure DNS immediately.",10],
                ["Found Subdomains with Fierce.",31],
                ["Email Addresses discovered with DMitry.",9],
                ["Subdomains discovered with DMitry.",31],
                ["Telnet Service Detected.",32],
                ["FTP Service Detected.",33],
                ["Vulnerable to STUXNET.",34],
                ["WebDAV Enabled.",35],
                ["Found some information through Fingerprinting.",36],
                ["Open Files Found with Uniscan.",25],
                ["Open Directories Found with Uniscan.",26],
                ["Vulnerable to Stress Tests.",37],
                ["Uniscan detected possible LFI, RFI or RCE.",38],
                ["Uniscan detected possible XSS, SQLi, BSQLi.",39],
                ["Apache Expect XSS Header not present.",12],
                ["Found Subdomains with Nikto.",31],
                ["Webserver vulnerable to Shellshock Bug.",40],
                ["Webserver leaks Internal IP.",41],
                ["HTTP PUT DEL Methods Enabled.",42],
                ["Some vulnerable heades exposed.",43],
                ["Webserver vulnerable to MS10-070.",44],
                ["Some issues found on the Webserver.",30],
                ["Webserver is Outdated.",45],
                ["Some issues found with HTTP Options.",42],
                ["CGI Directories Enumerated.",26],
                ["Vulnerabilities reported in SSL Scans.",29],
                ["Interesting Files Detected.",25],
                ["Injectable Paths Detected.",46],
                ["Found Subdomains with DNSMap.",31],
                ["MS-SQL DB Service Detected.",47],
                ["MySQL DB Service Detected.",47],
                ["ORACLE DB Service Detected.",47],
                ["RDP Server Detected over UDP.",48],
                ["RDP Server Detected over TCP.",48],
                ["TCP Ports are Open",8],
                ["UDP Ports are Open",8],
                ["SNMP Service Detected.",49],
                ["Elmah is Configured.",50],
                ["SMB Ports are Open over TCP",51],
                ["SMB Ports are Open over UDP",51],
                ["Wapiti discovered a range of vulnerabilities",30],
                ["IIS WebDAV is Enabled",35],
                ["X-XSS Protection is not Present",12]



            ]


tool_status = [
                ["has IPv6",1,"ipv6",["not found","has IPv6"]],
                ["Server Error",0,"asp.netmisconf",["unable to resolve host address","Connection timed out"]],
                ["wp-login",0,"wpcheck",["unable to resolve host address","Connection timed out"]],
                ["drupal",0,"drupalcheck",["unable to resolve host address","Connection timed out"]],
                ["joomla",0,"joomlacheck",["unable to resolve host address","Connection timed out"]],
                ["[+]",0,"robotscheck",["Use of uninitialized value in unpack at"]],
                ["No WAF",0,"wafcheck",["appeas to be down"]],
                ["tcp open",0,"nmapopen",["Failed to resolve"]],
                ["No emails found",1,"harvester",["No hosts found","No emails found"]],
                ["[+] Zone Transfer was successful!!",0,"dnsreconzt",["Could not resolve domain"]],
                ["Whoah, it worked",0,"fiercezt",["none"]],
                ["0 erros",0,"dnswalkzt",["!!!0 failures, 0 WARNINGs, 3 erros."]],
                ["Admin Email:",0,"whois",["No match for domain"]],
                ["XSS filter is disabled",0,"nmapxssh",["Failed to resolve"]],
                ["VULNERABLE",0,"nmapdos",["Failed to resolve"]],
                ["Server is vulnerable to Heartbleed",0,"sslyzehb",["Could not resolve hostname"]],
                ["VULNERABLE",0,"nmap1",["Failed to resolve"]],
                ["VULNERABLE",0,"nmap2",["Failed to resolve"]],
                ["VULNERABLE",0,"nmap3",["Failed to resolve"]],
                ["VULNERABLE",0,"nmap4",["Failed to resolve"]],
                ["VULNERABLE",0,"nmap5",["Failed to resolve"]],
                ["ERROR - OCSP response status is not successful",0,"sslyze1",["Could not resolve hostname"]],
                ["VULNERABLE",0,"sslyze2",["Could not resolve hostname"]],
                ["VULNERABLE",0,"sslyze3",["Could not resolve hostname"]],
                ["VULNERABLE",0,"sslyze4",["Could not resolve hostname"]],
                ["does NOT use Load-balancing",0,"lbd",["NOT FOUND"]],
                ["No vulnerabilities found",1,"golism1",["Cannot resolve domain name","No vulnerabilities found"]],
                ["No vulnerabilities found",1,"golism2",["Cannot resolve domain name","No vulnerabilities found"]],
                ["No vulnerabilities found",1,"golism3",["Cannot resolve domain name","No vulnerabilities found"]],
                ["No vulnerabilities found",1,"golism4",["Cannot resolve domain name","No vulnerabilities found"]],
                ["No vulnerabilities found",1,"golism5",["Cannot resolve domain name","No vulnerabilities found"]],
                ["FOUND: 0",1,"dirb",["COULDNT RESOLVE HOST","FOUND: 0"]],
                ["Could not find any vulnerability!",1,"xsser",["XSSer is not working propertly!","Could not find any vulnerability!"]],
                ["Occurrence ID",0,"golism6",["Cannot resolve domain name"]],
                ["DNS zone transfer successful",0,"golism7",["Cannot resolve domain name"]],
                ["Nikto found 0 vulnerabilities",1,"golism8",["Cannot resolve domain name","Nikto found 0 vulnerabilities"]],
                ["Possible subdomain leak",0,"golism9",["Cannot resolve domain name"]],
                ["AXFR record query failed:",1,"dnsenumzt",["NS record query failed:","AXFR record query failed","no NS record for"]],
                ["Found 0 entries",1,"fierce2",["Found 0 entries","is gimp"]],
                ["Found 0 E-Mail(s)",1,"dmitry1",["Unable to locate Host IP addr","Found 0 E-Mail(s)"]],
                ["Found 0 possible subdomain(s)",1,"dmitry2",["Unable to locate Host IP addr","Found 0 possible subdomain(s)"]],
                ["open",0,"nmaptelnet",["Failed to resolve"]],
                ["open",0,"nmapftp",["Failed to resolve"]],
                ["open",0,"nmapstux",["Failed to resolve"]],
                ["SUCCEED",0,"webdav",["is not DAV enabled or not accessible."]],
                ["No vulnerabilities found",1,"golism10",["Cannot resolve domain name","No vulnerabilities found"]],
                ["[+]",0,"uniscan2",["Use of uninitialized value in unpack at"]],
                ["[+]",0,"uniscan3",["Use of uninitialized value in unpack at"]],
                ["[+]",0,"uniscan4",["Use of uninitialized value in unpack at"]],
                ["[+]",0,"uniscan5",["Use of uninitialized value in unpack at"]],
                ["[+]",0,"uniscan6",["Use of uninitialized value in unpack at"]],
                ["0 item(s) reported",1,"nikto1",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto2",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto3",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto4",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto5",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto6",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto7",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto9",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto10",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto11",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto12",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto13",["ERROR: Cannot resolve hostname","0 item(s) reported","No web server found","0 host(s) tested"]],
                ["0 item(s) reported",1,"nikto14","ERROR: Cannot resolve hostname , 0 item(s) reported"],
                ["#1",0,"dnsmap_brute",["[+] 0 (sub)domains and 0 IP address(es) found"]],
                ["open",0,"nmapmssql",["Failed to resolve"]],
                ["open",0,"nmapmysql",["Failed to resolve"]],
                ["open",0,"nmaporacle",["Failed to resolve"]],
                ["open",0,"nmapudprdp",["Failed to resolve"]],
                ["open",0,"nmaptcprdp",["Failed to resolve"]],
                ["open",0,"nmapfulltcp",["Failed to resolve"]],
                ["open",0,"nmapfulludp",["Failed to resolve"]],
                ["open",0,"nmapsnmp",["Failed to resolve"]],
                ["Microsoft SQL Server Error Log",0,"elmahxd",["unable to resolve host address","Connection timed out"]],
                ["open",0,"nmaptcpsmb",["Failed to resolve"]],
                ["open",0,"nmapudpsmb",["Failed to resolve"]],
                ["Host:",0,"wapiti",["none"]],
                ["WebDAV is ENABLED",0,"nmapwebdaviis",["Failed to resolve"]],
                ["X-XSS-Protection[1",1,"whatweb",["Timed out","Socket error","X-XSS-Protection[1"]]

               ]


tools_precheck = [
					["wapiti"], ["whatweb"], ["nmap"], ["golismero"], ["host"], ["wget"], ["uniscan"], ["wafw00f"], ["dirb"], ["davtest"], ["theharvester"], ["xsser"], ["dnsrecon"],["fierce"], ["dnswalk"], ["whois"], ["sslyze"], ["lbd"], ["golismero"], ["dnsenum"],["dmitry"], ["davtest"], ["nikto"], ["dnsmap"]
			     ]
			     
# Shuffling Scan Order (starts)
scan_shuffle = list(zip(tool_names, tool_cmd, tool_resp, tool_status))
random.shuffle(scan_shuffle)
tool_names, tool_cmd, tool_resp, tool_status = zip(*scan_shuffle)
tool_checks = (len(tool_names) + len(tool_resp) + len(tool_status)) / 3 

# Shuffling Scan Order (ends)
			     


# Tool Head Pointer: (can be increased but certain tools will be skipped)
tool = 0

# Run Test
runTest = 1

# For accessing list/dictionary elements
arg1 = 0
arg2 = 1
arg3 = 2
arg4 = 3
arg5 = 4
arg6 = 5

# Detected Vulnerabilities [will be dynamically populated]
s_vul_list = list()
s_vul_num = 0
s_vul = 0

# Total Time Elapsed
s_total_elapsed = 0

# Tool Pre Checker
s_avail_tools = 0

# Checks Skipped
s_skipped_checks = 0


if len(sys.argv) == 1 :
    helper()
else:
    target = sys.argv[1].lower()

    if target == '--help' or target == '-h' or target == '--h':
        helper()
        sys.exit(1)
    else:

        target = url_maker(target)
        os.system('rm te* > /dev/null 2>&1') 
        os.system('clear')
        unavail_tools = 0
        unavail_tools_names = list()
        while (s_avail_tools < len(tools_precheck)):
			precmd = str(tools_precheck[s_avail_tools][arg1])
			try:
				p = subprocess.Popen([precmd], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE,shell=True)
				output, err = p.communicate()
				val = output + err
			except:
				print "\t"+bcolos.BG_ERR_TXT+"Scan was terminated..."+bcolos.ENDC
				sys.exit(1)
			if "not found" in val:
				print "\t"+bcolos.prCyan+tools_precheck[s_avail_tools][arg1]+bcolos.ENDC+bcolos.BADFAIL+"...unavailable."+bcolos.ENDC
				for scanner_index, scanner_val in enumerate(tool_names):
					if scanner_val[2] == tools_precheck[s_avail_tools][arg1]:
						scanner_val[3] = 0 # disabling scanner as it's not available.
						unavail_tools_names.append(tools_precheck[s_avail_tools][arg1])
						unavail_tools = unavail_tools + 1
			else:
				print "\t"+bcolos.prCyan+tools_precheck[s_avail_tools][arg1]+bcolos.ENDC+bcolos.OKGREEN+"...available."+bcolos.ENDC
			s_avail_tools = s_avail_tools + 1
			clear()
        unavail_tools_names = list(set(unavail_tools_names))
        if unavail_tools == 0:
        	print "\t" "BINGO!!!"+bcolos.ENDC
        else:
        	print "\t"+"These tools "+bcolos.BADFAIL+str(unavail_tools_names)+" are not availble"+bcolos.ENDC
        print "\n"
        print "[ SCANING:  ]"+bcolos.ENDC
        #while (tool < 1):
        while(tool < len(tool_names)):
            print " Scan " +"/ > "+bcolos.prCyan+tool_names[tool][arg1]+bcolos.ENDC,
            if tool_names[tool][arg2] == 0:
            	print " Unavailable Tools"+bcolos.ENDC
		s_skipped_checks = s_skipped_checks + 1
            	tool = tool + 1
            	continue
            spinner.start()
            scan_start = time.time()
            temp_file = "temp_"+tool_names[tool][arg1]
            cmd = tool_cmd[tool][arg1]+target+tool_cmd[tool][arg2]+" > "+temp_file+" 2>&1"

            try:
                subprocess.check_output(cmd, shell=True)
            except KeyboardInterrupt:
                runTest = 0
            except:
                runTest = 1

            if runTest == 1:
                    spinner.stop()
                    scan_stop = time.time()
                    elapsed = scan_stop - scan_start
                    s_total_elapsed = s_total_elapsed + elapsed
                    print bcolos.prCyan+"\b.DONE  "+bcolos.ENDC+"\n"
                    clear()
                    s_tool_output_file = open(temp_file).read()
                    if tool_status[tool][arg2] == 0:
                    	if tool_status[tool][arg1].lower() in s_tool_output_file.lower():
                        	
                        	vul_remed_info(tool,tool_resp[tool][arg2])
                        	s_vul_list.append(tool_names[tool][arg1]+"*"+tool_resp[tool][arg1])
                    else:
                    	
                        	vul_remed_info(tool,tool_resp[tool][arg2])
                        	s_vul_list.append(tool_names[tool][arg1]+"*"+tool_resp[tool][arg1])
            else:
                    runTest = 1
                    spinner.stop()
                    scan_stop = time.time()
                    elapsed = scan_stop - scan_start
                    s_total_elapsed = s_total_elapsed + elapsed
                    print bcolos.prCyan+"\b\b\b\b...Interrupted  "+bcolos.ENDC+"\n"
                    clear()
                    print "\t"+bcolos.WARNING + "Test Skipped.." + bcolos.ENDC
                    s_skipped_checks = s_skipped_checks + 1

            tool=tool+1

        print bcolos.BG_ENDL_TXT+"[ Scan Completed. ]"+bcolos.ENDC
        print "\n"


        print "\tTotal Number of Vulnerability Checks        : "+bcolos.BOLD+bcolos.OKGREEN+str(len(tool_names))+bcolos.ENDC
        print "\tTotal Number of Vulnerability Checks Skipped: "+bcolos.BOLD+bcolos.WARNING+str(s_skipped_checks)+bcolos.ENDC
        print "\tTotal Number of Vulnerabilities Detected    : "+bcolos.BOLD+bcolos.BADFAIL+str(len(s_vul_list))+bcolos.ENDC
        print "\tTotal Time Elapsed for the Scan             : "+bcolos.BOLD+bcolos.prCyan+display_time(int(s_total_elapsed))+bcolos.ENDC
        print "\n"
        print "\tFor Debugging Purposes, You can view the complete output generated by all the tools named "+bcolos.prCyan+"`ScanLog`"+bcolos.ENDC+" under the same directory."
        print bcolos.BG_ENDL_TXT+"[ Report Completed. ]"+bcolos.ENDC

     
        os.system('rm te* > /dev/null 2>&1') # Clearing previous scan files
